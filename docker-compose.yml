services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: icare-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-icare_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-icare_password}
      POSTGRES_DB: ${DB_NAME:-icare_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - icare-network

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: icare-api
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-icare_user}:${DB_PASSWORD:-icare_password}@postgres:5432/${DB_NAME:-icare_db}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:5000}
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - postgres
    networks:
      - icare-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  uploads_data:

networks:
  icare-network:
    driver: bridge